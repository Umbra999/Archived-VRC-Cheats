using LunaR.Api;
using LunaR.Extensions;
using LunaR.Modules;
using LunaR.Wrappers;
using System.Linq;
using UnityEngine;
using VRC.SDKBase;

namespace LunaR.QMButtons
{
    internal class ExploitMenu
    {
        public static void Init()
        {
            QMNestedButton ThisMenu = new(MainMenu.ClientMenu, 1.5f, 1, "Exploits", "Exploit Menu", "Exploit Options", QMButtonAPI.ButtonSize.Default, GeneralWrappers.GetSprite("Exploits"));

            new QMToggleButton(ThisMenu, 1, 0, "Loud \nMic", delegate
            {
                USpeaker.field_Internal_Static_Single_1 = float.MaxValue;
            }, delegate
            {
                USpeaker.field_Internal_Static_Single_1 = 1f;
            }, "Everyone hears you very Loud");

            new QMToggleButton(ThisMenu, 2, 0, "Avatar \nCrash", delegate
            {
                Exploits.AvatarCrash(true).Start();
            }, delegate
            {
                Exploits.AvatarCrash(false).Start();
            }, "Worldcrash with an Avatar");

            new QMToggleButton(ThisMenu, 3, 0, "Timer \nSound", delegate
            {
                CameraHandler.TakePicture(int.MaxValue);
            }, delegate
            {
                CameraHandler.Reset();
            }, "Play Timer Sounds");

            new QMToggleButton(ThisMenu, 3, 0, "Camera \nSpam", delegate
            {
                Exploits.CameraCrash().Start();
            }, delegate
            {
                Exploits.CameraCrashToggle = false;
            }, "Spam the Camera");

            new QMToggleButton(ThisMenu, 4, 0, "Cache \nDisconnect", delegate
            {
                PhotonModule.DisconnectLobby().Start();
            }, delegate
            {
                PhotonModule.DisconnectToggle = false;
            }, "Disconnect the current Master");

            new QMSingleButton(ThisMenu, 1, 1, "Quest \nCrash", delegate
            {
                Exploits.QuestCrash().Start();
            }, "Crash all Quest Users", null, QMButtonAPI.ButtonSize.Half);

            new QMSingleButton(ThisMenu, 1, 1.5f, "Video \nCrash", delegate
            {
                Exploits.OverrideVideoPlayers("https://www.youtube.com/watch?v=SztEjRWc_pc");
            }, "Crash the world with Videoplayers", null, QMButtonAPI.ButtonSize.Half);

            new QMToggleButton(ThisMenu, 2, 1, "Collider \nRemove", delegate
            {
                Exploits.PortalColliderRemover().Start();
            }, delegate
            {
                Exploits.MenuRemover = false;
            }, "Make Colliders unclickabler");

            new QMSingleButton(ThisMenu, 3, 1, "Freefall \nItems", delegate
            {
                Exploits.FloorDropper();
            }, "Remove the Collider with Items", null, QMButtonAPI.ButtonSize.Half);

            new QMSingleButton(ThisMenu, 3, 1.5f, "Change \nPedestals", delegate
            {
                Utils.VRCUiPopupManager.AskInGameInput("Avatar ID", "Ok", delegate (string text)
                {
                    if (text.StartsWith("avtr_")) RPCHandler.ChangePedestals(text);
                });
            }, "Change all Avatar Pedestals", null, QMButtonAPI.ButtonSize.Half);

            new QMToggleButton(ThisMenu, 4, 1, "Connect \nOnly", delegate
            {
                PhotonModule.Invisible = true;
            }, delegate
            {
                PhotonModule.Invisible = false;
            }, "Connect without Instantiating");

            new QMToggleButton(ThisMenu, 1, 2, "Windows \nPortal", delegate
            {
                Exploits.WindowsPortal().Start();
            }, delegate
            {
                Exploits.CursedPortalToggle = false;
            }, "Spawn Portals with Windows overrides");

            new QMToggleButton(ThisMenu, 2, 2, "Move \nInfinity", delegate
            {
                PatchExtensions.TeleportInfinity = true;
            }, delegate
            {
                PatchExtensions.TeleportInfinity = false;
            }, "Players see you at Infinity");

            new QMToggleButton(ThisMenu, 3, 2, "Pen \nDrawing", delegate
            {
                ItemHandler.SpreadVirus().Start();
            }, delegate
            {
                ItemHandler.PenVirus = false;
            }, "Draw over the whole Map");

            new QMToggleButton(ThisMenu, 4, 2, "Prefab \nLag", delegate
            {
                ItemHandler.PrefabLag().Start();
            }, delegate
            {
                ItemHandler.LagPrefab = false;
            }, "Lag the World with Prefabs");

            new QMToggleButton(ThisMenu, 1, 3, "Hide \nHitbox", delegate
            {
                Exploits.HideCollider(true);
            }, delegate
            {
                Exploits.HideCollider(false);
            }, "Move your Hitbox under your feet");

            new QMToggleButton(ThisMenu, 2, 3, "Emoji \nSpam", delegate
            {
                RPCHandler.EmojiSpammer().Start();
            }, delegate
            {
                RPCHandler.EmojiSpam = false;
            }, "Spam Emojis");

            new QMSingleButton(ThisMenu, 3, 3, "Crash \nWC User", delegate
            {
                PhotonModule.CrashWorldClient();
            }, "Crash all Worldclient User", null, QMButtonAPI.ButtonSize.Half);

            new QMSingleButton(ThisMenu, 3, 3.5f, "Pickup \nCrash", delegate
            {
                Exploits.CrashItems();
            }, "Crash the World with Pickups", null, QMButtonAPI.ButtonSize.Half);
        }
    }
}